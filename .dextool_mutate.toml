[workarea]
restrict = ["googlemock/include", "googlemock/src", "googletest/include", "googletest/src"]
[analyze]
exclude = ["googlemock/test", "googletest/test"]
[database]
db = "dextool_mutate.sqlite3"
[compiler]
extra_flags = [ "-D_POSIX_PATH_MAX=1024" ]
[compile_commands]
search_paths = ["./build/compile_commands.json"]
filter = ["-c", "-o", "-m", "-nodevicelib", "-Waddr-space-convert", "-non-static", "-Bstatic", "-Bdynamic", "-Xbind-lazy", "-Xbind-now", "-f", "-static", "-shared", "-rdynamic", "-s", "-l", "-L", "-z", "-u", "-T", "-Xlinker", "-l", "-MT", "-MF", "-MD", "-MQ", "-MMD", "-MP", "-MG", "-E", "-cc1", "-S", "-M", "-MM", "-###", "-Werror", "-Wunused-private-field"]
[mutant_test]
test_cmd = [["build/googlemock/shared_gmock_test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock_output_test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-internal-utils_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock_leak_test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-more-actions_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-cardinalities_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-generated-actions_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-function-mocker_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-nice-strict_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-port_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock_ex_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock_link_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-actions_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-generated-matchers_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-more-actions_no_exception_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock_no_rtti_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-spec-builders_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googlemock/gmock-matchers_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-catch-exceptions-no-ex-test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-throw-on-failure-test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_premature_exit_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_xml_output_unittest_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-color-test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_environment_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-break-on-failure-unittest_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-port-test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-listener-test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_no_test_unittest", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest-typed-test_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-filter-unittest_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-filepath-test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-message-test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-options-test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_xml_outfile2_test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_main_unittest", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_throw_on_failure_ex_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest-death-test_ex_nocatch_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-catch-exceptions-ex-test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-death-test-test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest-death-test_ex_catch_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-output-test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-env-var-test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_skip_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_no_rtti_unittest", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-shuffle-test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_skip_in_environment_setup_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_repeat_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_help_test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest-unittest-api_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-uninitialized-test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_xml_outfile1_test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-param-test-test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-list-tests-unittest_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_sole_header_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-test-part-test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_prod_test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_pred_impl_unittest", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_dll_test_", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/googletest-printers-test", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"], ["build/googletest/gtest_unittest", "--gtest_filter=-OutputFileHelpersTest.GetCurrentExecutableName:FooTest.ShouldFail"]]
# test_cmd_timeout = 7000
build_cmd = "./build.sh"
analyze_using_builtin = ["gtest"]
use_early_stop = true
# oldest_mutants = "test"
# oldest_mutants_nr = 2

# detected_new_test_case = "doNothing"|"resetAlive"
# how to behave when test cases are detected as having been removed
# should the test and the gathered statistics be remove too?
# detected_dropped_test_case = "remove"

[test_group]
[test_group.uc1]
description = "Parameterized Tests"
pattern = "Value.*|TypeTrait.*|Typed.*"
[test_group.uc2]
description = "Test Report"
pattern = "TestResult.*|TestPartResult.*|TestInfo.*"
[test_group.uc3]
description = "Resetting Mocks"
pattern = "VerifyAndClear.*"
